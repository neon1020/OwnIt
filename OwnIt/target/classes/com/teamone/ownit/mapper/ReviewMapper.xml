<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.teamone.ownit.mapper.ReviewMapper">

    <select id="selectReviewList" resultType="com.teamone.ownit.vo.ReviewListVO">
        SELECT * , 
          CASE WHEN a.num IS NULL THEN 'like_none.jpg' 
                                  ELSE 'like2.jpg' END AS heartImg
          FROM reviewList r
          LEFT JOIN (SELECT review_idx, '1' as num
                        FROM style_like_list s
                        WHERE member_idx = #{member_idx}) a
          ON r.review_idx = a.review_idx
          GROUP BY r.review_idx
          <choose>
              <when test="keyword.equals('new')">
                ORDER BY review_date DESC
              </when>
              <when test="keyword.equals('pop')">
                ORDER BY likeCount DESC
              </when>
          </choose>
          LIMIT #{startRow}, #{listLimit}
    </select>
    
    <select id="selectReview" resultType="com.teamone.ownit.vo.ReviewListVO">
        SELECT *
            FROM reviewList
            WHERE
              review_idx = #{review_idx}
    </select>
    
    <select id="selectReviewImage" resultType="com.teamone.ownit.vo.ReviewListVO">
        SELECT review_idx, image_real_file1 as review_image1
            FROM image
            WHERE image_board_type = 'review'
              AND review_idx = #{review_idx}
              AND image_real_file1 IS NOT NULL
            UNION ALL 
        SELECT review_idx, image_real_file2 as review_image1
            FROM image
            WHERE image_board_type = 'review'
              AND review_idx = #{review_idx}
              AND image_real_file2 IS NOT NULL
            UNION ALL
        SELECT review_idx, image_real_file3 as review_image1
            FROM image
            WHERE image_board_type = 'review'
              AND review_idx = #{review_idx}
              AND image_real_file3 IS NOT NULL
    </select>
        
    <select id="selectReply" resultType="com.teamone.ownit.vo.ReplyVO">
        SELECT * 
          FROM reply r
          LEFT JOIN image i
          ON r.member_idx = i.member_idx
          LEFT JOIN member m
          ON r.member_idx = m.member_idx
          WHERE 
            r.review_idx = #{review_idx}
          ORDER BY 
            r.reply_re_ref DESC,
            r.reply_re_seq ASC
    </select>
    
    <select id="selectProduct" resultType="com.teamone.ownit.vo.ReviewListVO">
        SELECT p.product_name, p.product_idx, i.image_real_file1 as product_image, o.member_idx
            FROM product p
            LEFT JOIN order_buy o
            ON o.product_idx = p.product_idx
            LEFT JOIN image i
            ON o.product_idx = i.product_idx
            WHERE order_buy_idx = #{order_buy_idx}
    </select>
    
    <insert id="insertReview">
      <selectKey keyProperty="review_idx" resultType="integer" order="BEFORE">
        SELECT IFNULL(MAX(review_idx), 0) FROM review
      </selectKey>
         INSERT 
           INTO review
           VALUES (
             #{review_idx} + 1,
             #{product_idx},
             #{member_idx},
             #{review_content},
             0,
             DATE_FORMAT(now(), '%y-%m-%d %H:%i')
           )
    </insert>
    
    <insert id="insertReviewImage">
      <selectKey keyProperty="image_idx" resultType="integer" order="BEFORE">
        SELECT IFNULL(MAX(image_idx), 0) FROM image
      </selectKey>
        INSERT 
          INTO image
          VALUES (
              #{image_idx} + 1, 
              null, 
              #{review_idx} + 1, 
              null, 
              'review', 
              #{image_real_file1}, 
              #{image_original_file1}, 
              #{image_real_file2}, 
              #{image_original_file2}, 
              #{image_real_file3}, 
              #{image_original_file3}
              )
    </insert>
    
    <delete id="deleteReview">
        DELETE
          FROM review
          WHERE
            review_idx = #{review_idx}
    </delete>
    
    <select id="selectProfile" resultType="com.teamone.ownit.vo.ReviewListVO">
         SELECT member_nickname, image_real_file1 member_image
            FROM member m
            LEFT JOIN image i
                  ON m.member_idx = i.member_idx
                  WHERE 
                    m.member_idx =  #{member_idx}
    </select>
    
    <select id="selectMystyleList" resultType="com.teamone.ownit.vo.ReviewListVO">
		    SELECT * , 
          CASE WHEN a.num IS NULL THEN 'like_none.jpg' 
                                  ELSE 'like2.jpg' END AS heartImg
          FROM reviewList r
          LEFT JOIN (SELECT review_idx, '1' as num
                        FROM style_like_list s
                        WHERE member_idx = #{member_idx2}) a
          ON r.review_idx = a.review_idx
					WHERE member_idx = #{member_idx}
					ORDER BY review_date DESC
    </select>
    
    <select id="selectReviewCount" resultType="integer">
        SELECT count(*) 
          FROM reviewList
          WHERE 
            member_idx = #{member_idx}
    </select>
    
    <update id="updateReview">
        UPDATE review
          SET
            review_content = #{review_content}
          WHERE
            review_idx = #{review_idx}
    </update>
    
    <update id="updateReviewImage">
        UPDATE image
          SET
            image_real_file1 = #{image_real_file1}, 
            image_original_file1 = #{image_original_file1}, 
            image_real_file2 = #{image_real_file2}, 
            image_original_file2 = #{image_original_file2}, 
            image_real_file3 = #{image_real_file3}, 
            image_original_file3 = #{image_original_file3}
          WHERE
            review_idx = #{review_idx}
    </update>
    
    <update id="updateReplycount">
        UPDATE review
          SET 
            review_reply_count = review_reply_count + 1
          WHERE 
            review_idx = #{review_idx}
    </update>
    
    <insert id="insertReply">
      <selectKey keyProperty="reply_idx" resultType="integer" order="BEFORE">
        SELECT IFNULL(MAX(reply_idx), 0) FROM reply
      </selectKey>
        INSERT 
          INTO reply
          VALUES (
            #{review_idx},
            #{member_idx},
            #{reply_content},
            #{reply_idx} + 1,
            0,
            0,
            DATE_FORMAT(now(), '%y-%m-%d %H:%i'),
            null,
            #{reply_idx} + 1
            )
    </insert>
    
    <insert id="insertReplies">
      <selectKey keyProperty="reply_idx" resultType="integer" order="BEFORE">
        SELECT IFNULL(MAX(reply_idx), 0) FROM reply
      </selectKey>
        INSERT 
          INTO reply
          VALUES (
            #{review_idx},
            #{member_idx},
            #{reply_content},
            #{reply_re_ref},
            #{reply_re_lev} + 1,
            #{reply_re_seq} + 1,
            DATE_FORMAT(now(), '%y-%m-%d %H:%i'),
            null,
            ${reply_idx} + 1
            )
    </insert>
    
    <select id="selectReplyCount" resultType="integer">
        SELECT COUNT(*) 
          FROM reply
          WHERE 
            review_idx = #{review_idx};
    </select>
    
    <delete id="deleteReply">
        DELETE
          FROM reply
          WHERE
            review_idx = #{review_idx}
            AND
            reply_idx = #{reply_idx}
    </delete>
    
    <update id="updateReplycount2">
        UPDATE review
          SET 
            review_reply_count = review_reply_count - 1
          WHERE 
            review_idx = #{review_idx}
    </update>
    
    <select id="selectLike" resultType="int">
        SELECT COUNT(*)
          FROM style_like_list
          WHERE 
            review_idx = #{review_idx}
            AND
            member_idx = #{member_idx}
    </select>
    
    <select id="selectListLike" resultType="int">
        SELECT review_idx
          FROM style_like_list
          WHERE 
            member_idx = #{member_idx}
    </select>
    
    <select id="selectLikeCount" resultType="int">
        SELECT COUNT(*)
          FROM style_like_list
          WHERE
            review_idx = #{review_idx}
    </select>
    
    <insert id="insertLike">
        INSERT
          INTO style_like_list
          VALUES (
            #{member_idx},
            #{review_idx}
          )
    </insert>
    
    <delete id="deleteLike">
        DELETE
          FROM style_like_list
          WHERE
            member_idx = #{member_idx}
            AND
            review_idx = #{review_idx}
    </delete>
    
    <update id="updateOrderGb">
        UPDATE order_buy
          SET order_buy_gb = 4
          WHERE
            order_buy_idx = #{order_buy_idx}
    </update>
    
    <select id="selectOrderBuy" resultType="int">
        SELECT COUNT(*)
          FROM order_buy 
          WHERE 
            order_buy_idx = #{order_buy_idx} 
            AND 
            member_idx = #{member_idx}
    </select>
    
    <select id="selectReviewMember" resultType="int">
        SELECT COUNT(*)
          FROM review
          WHERE 
            review_idx = #{review_idx} 
            AND 
            member_idx = #{member_idx}
    </select>

</mapper> 
