<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.teamone.ownit.mapper.AdminMapper">

<!-- 김소희 -->

	<!-- 전체 상품 목록 갯수 조회 -->
	<select id="selectProductListCount" resultType="integer">
		SELECT 
			COUNT(*) 
			FROM product
			<if test="!keyword.equals('')">
				<!-- 2. 검색타입(search)에 따른 WHERE 변경 -->
				<choose>
					<when test="searchType.equals('all')">
						WHERE product_brand LIKE '%${keyword}%' 
							OR product_type LIKE '%${keyword}%' 
							OR product_name LIKE '%${keyword}%'
							OR product_model_num LIKE '%${keyword}%'
							OR product_color LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('brand')">
						WHERE product_brand LIKE '%${keyword}%' 
					</when>
					<when test="searchType.equals('type')">
						WHERE product_type LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('name')">
						WHERE product_name LIKE '%${keyword}%'
					</when>
				</choose>
			</if>
	</select>

	<!-- 상품 목록 조회 productList (검색, 페이징 추가) -->
	<select id="selectProductList" resultType="com.teamone.ownit.vo.AdminProductVO">
		SELECT * 
			FROM product p LEFT OUTER JOIN image i
			ON p.product_idx = i.product_idx
			
			<if test="!keyword.equals('')">
			<choose>
					<when test="searchType.equals('all')">
						WHERE p.product_brand LIKE '%${keyword}%' 
							OR p.product_type LIKE '%${keyword}%' 
							OR p.product_name LIKE '%${keyword}%'
							OR p.product_model_num LIKE '%${keyword}%'
							OR p.product_color LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('brand')">
						WHERE p.product_brand LIKE '%${keyword}%' 
					</when>
					<when test="searchType.equals('type')">
						WHERE p.product_type LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('name')">
						WHERE p.product_name LIKE '%${keyword}%'
					</when>
				</choose>
			</if>
			ORDER BY 
				p.product_idx
			LIMIT #{startRow}, #{listLimit}
	</select>
	
	<!-- Product 등록 (글쓰기) -->
	<insert id="insertProduct">
		<selectKey keyProperty="product_idx" resultType="integer" order="BEFORE">
			SELECT MAX(product_idx) FROM product
		</selectKey>
		INSERT 
			INTO product
			VALUES (
					#{product_idx} + 1, 
					#{product_type}, 
					#{product_brand}, 
					#{product_name}, 
					#{product_model_num}, 
					#{product_color}, 
					#{product_release_price}, 
					#{product_buy_price}, 
					#{product_sell_price}, 
					0, 
					0, 
					DATE_FORMAT(now(), '%y-%m-%d')
					)
	</insert>
	
	<!-- Product 등록 (글쓰기) + 다중 파일 업로드 -->
	<insert id="insertProductImage">
		<selectKey keyProperty="image_idx" resultType="integer" order="BEFORE">
			SELECT MAX(image_idx) FROM image
		</selectKey>
		INSERT 
			INTO image
			VALUES (
					#{image_idx} + 1, 
					#{product_idx} + 1, 
					null, 
					null, 
					'product', 
					#{image_real_file1}, 
					#{image_original_file1}, 
					#{image_real_file2}, 
					#{image_original_file2}, 
					#{image_real_file3}, 
					#{image_original_file3}
					)
	</insert>
	
	<!-- Product 수정을 위해 글 + 이미지 SELECT -->
	<select id="selectProduct" resultType="com.teamone.ownit.vo.AdminProductVO">
		SELECT 
				p.product_idx, p.product_type, p.product_brand, p.product_name, p.product_model_num, 
    			p.product_color, p.product_release_price, p.product_buy_price, p.product_sell_price,
			    i.image_original_file1, i.image_original_file2, i.image_original_file3,
			    i.image_real_file1, i.image_real_file2, i.image_real_file3
			    
			FROM 
				product p LEFT OUTER JOIN image i
			ON 
				p.product_idx = i.product_idx
			WHERE
				p.product_idx = #{product_idx}
		
	</select>
	
	<!-- Product 수정 작업 수행 -->
	<update id="updateProduct">
		UPDATE 
				product p LEFT OUTER JOIN image i
			ON 
				p.product_idx = i.product_idx
			SET 
				p.product_type = #{product_type}
				, p.product_brand = #{product_brand}
				, p.product_name = #{product_name}
				, p.product_model_num = #{product_model_num}
				, p.product_color = #{product_color}
				, p.product_release_price = #{product_release_price}
				, p.product_buy_price = #{product_buy_price}
				, p.product_sell_price = #{product_sell_price}
				<if test="!image_original_file1.equals('')">
					, i.image_original_file1 = #{image_original_file1}
					, i.image_real_file1 = #{image_real_file1}
				</if>
				<if test="!image_original_file2.equals('')">
					, i.image_original_file2 = #{image_original_file2}
					, i.image_real_file2 = #{image_real_file2}
				</if>
				<if test="!image_original_file3.equals('')">
					, i.image_original_file3 = #{image_original_file3}
					, i.image_real_file3 = #{image_real_file3}
				</if>
			WHERE
				p.product_idx = #{product_idx}
	</update>
	
	<!-- 게시물 실제 업로드 파일명들 조회 -->
	<select id="selectRealFiles" resultType="String">
		SELECT 
				CONCAT(i.image_real_file1, '/', i.image_real_file2, '/', i.image_real_file3) 
			FROM 
				product p LEFT OUTER JOIN image i
			ON 
				p.product_idx = i.product_idx
			WHERE
				p.product_idx = #{product_idx}
	</select>
	
	<!-- Product Delete 삭제 -->
	<delete id="deleteProduct">
		DELETE
			FROM product
			WHERE 
				product_idx = #{product_idx}
	</delete>
	
	<!-- Order - Buy List 갯수 조회 -->
	<select id="selectBuyListCount" resultType="integer">
		SELECT COUNT(*)
		FROM order_buy ob
			LEFT JOIN address a
				ON ob.address_idx = a.address_idx
			LEFT JOIN member m
				ON ob.member_idx = m.member_idx
			LEFT JOIN product p
				ON ob.product_idx = p.product_idx
			<if test="!keyword.equals('')">
				<!-- 2. 검색타입(search)에 따른 WHERE 변경 -->
				<choose>
					<when test="searchType.equals('all')">
						WHERE m.member_name LIKE '%${keyword}%'
							OR p.product_name LIKE '%${keyword}%' 
							OR ob.order_buy_idx LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('member_name')">
						WHERE m.member_name LIKE '%${keyword}%' 
					</when>
					<when test="searchType.equals('product_name')">
						WHERE p.product_name LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('order_buy_idx')">
						WHERE ob.order_buy_idx LIKE '%${keyword}%'
					</when>
				</choose>
			</if>
	</select>

	<!-- Order- BuyList(구매 목록) 조회 -->
	<select id="selectBuyList" resultType="com.teamone.ownit.vo.AdminOrderVO">
		SELECT
			ob.order_buy_idx, ob.order_group_idx, ob.order_buy_date, ob.order_buy_gb,  
			a.address_zipcode, a.address1, a.address2,
	        m.member_name, 
	        p.product_name, p.product_buy_price, p.product_idx
		FROM order_buy ob
			LEFT JOIN address a
				ON ob.address_idx = a.address_idx
			LEFT JOIN member m
				ON ob.member_idx = m.member_idx
			LEFT JOIN product p
				ON ob.product_idx = p.product_idx
			<if test="!keyword.equals('')">
				<!-- 2. 검색타입(search)에 따른 WHERE 변경 -->
				<choose>
					<when test="searchType.equals('all')">
						WHERE m.member_name LIKE '%${keyword}%'
							OR p.product_name LIKE '%${keyword}%' 
							OR ob.order_buy_idx LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('member_name')">
						WHERE m.member_name LIKE '%${keyword}%' 
					</when>
					<when test="searchType.equals('product_name')">
						WHERE p.product_name LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('order_buy_idx')">
						WHERE ob.order_buy_idx LIKE '%${keyword}%'
					</when>
				</choose>
			</if>
			ORDER BY 
				order_group_idx DESC
			LIMIT #{startRow}, #{listLimit}
	</select>
	
	
	<select id="selectOrderGroup" resultType="com.teamone.ownit.vo.AdminOrderGroup">
		SELECT
			COUNT(*) as buyCount
		FROM order_buy ob
			LEFT JOIN address a
				ON ob.address_idx = a.address_idx
			LEFT JOIN member m
				ON ob.member_idx = m.member_idx
			LEFT JOIN product p
				ON ob.product_idx = p.product_idx
			<if test="!keyword.equals('')">
				<!-- 2. 검색타입(search)에 따른 WHERE 변경 -->
				<choose>
					<when test="searchType.equals('all')">
						WHERE m.member_name LIKE '%${keyword}%'
							OR p.product_name LIKE '%${keyword}%' 
							OR ob.order_buy_idx LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('member_name')">
						WHERE m.member_name LIKE '%${keyword}%' 
					</when>
					<when test="searchType.equals('product_name')">
						WHERE p.product_name LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('order_buy_idx')">
						WHERE ob.order_buy_idx LIKE '%${keyword}%'
					</when>
				</choose>
			</if>
			group by order_group_idx
			ORDER BY 
				order_group_idx DESC
			LIMIT #{startRow}, #{listLimit}
	
	</select>
	


	<!-- Order - Sell List 갯수 조회 -->
	<select id="selectSellListCount" resultType="integer">
		SELECT COUNT(*)
		FROM order_sell os
			LEFT JOIN account a
				ON os.account_idx = a.account_idx
			LEFT JOIN member m
				ON os.member_idx = m.member_idx
			LEFT JOIN product p
				ON os.product_idx = p.product_idx
			<if test="!keyword.equals('')">
				<!-- 2. 검색타입(search)에 따른 WHERE 변경 -->
				<choose>
					<when test="searchType.equals('all')">
						WHERE m.member_name LIKE '%${keyword}%'
							OR a.account_owner_name LIKE '%${keyword}%'
							OR p.product_name LIKE '%${keyword}%' 
							OR os.order_sell_idx LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('member_name')">
						WHERE m.member_name LIKE '%${keyword}%' 
					</when>
					<when test="searchType.equals('account_owner_name')">
						WHERE a.account_owner_name LIKE '%${keyword}%' 
					</when>
					<when test="searchType.equals('product_name')">
						WHERE p.product_name LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('order_sell_idx')">
						WHERE os.order_sell_idx LIKE '%${keyword}%'
					</when>
				</choose>
			</if>
	</select>

	<!-- Order- SellList(판매 목록) 조회 -->
	<select id="selectSellList" resultType="com.teamone.ownit.vo.AdminOrderVO">
		SELECT
			os.order_sell_idx, os.order_sell_date, os.order_sell_gb,
			a.account_bank, a.account_num, a.account_owner_name,
        	m.member_name, 
        	p.product_name, p.product_sell_price, p.product_idx
		FROM order_sell os
			LEFT JOIN account a
				ON os.account_idx = a.account_idx
			LEFT JOIN member m
				ON os.member_idx = m.member_idx
			LEFT JOIN product p
				ON os.product_idx = p.product_idx
			<if test="!keyword.equals('')">
				<!-- 2. 검색타입(search)에 따른 WHERE 변경 -->
				<choose>
					<when test="searchType.equals('all')">
						WHERE m.member_name LIKE '%${keyword}%'
							OR a.account_owner_name LIKE '%${keyword}%'
							OR p.product_name LIKE '%${keyword}%' 
							OR os.order_sell_idx LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('member_name')">
						WHERE m.member_name LIKE '%${keyword}%' 
					</when>
					<when test="searchType.equals('account_owner_name')">
						WHERE a.account_owner_name LIKE '%${keyword}%' 
					</when>
					<when test="searchType.equals('product_name')">
						WHERE p.product_name LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('order_sell_idx')">
						WHERE os.order_sell_idx LIKE '%${keyword}%'
					</when>
				</choose>
			</if>
			ORDER BY 
				order_sell_idx DESC
			LIMIT #{startRow}, #{listLimit}
	</select>
	
	
	<select id="selectSellListCount_0" resultType="integer">
		SELECT COUNT(*)
		FROM order_sell os
			LEFT JOIN account a
				ON os.account_idx = a.account_idx
			LEFT JOIN member m
				ON os.member_idx = m.member_idx
			LEFT JOIN product p
				ON os.product_idx = p.product_idx
		WHERE os.order_sell_gb = '0'
			<if test="!keyword.equals('')">
				<!-- 2. 검색타입(search)에 따른 WHERE 변경 -->
				<choose>
					<when test="searchType.equals('all')">
						AND (m.member_name LIKE '%${keyword}%'
						OR a.account_owner_name LIKE '%${keyword}%'
						OR p.product_name LIKE '%${keyword}%' 
						OR os.order_sell_idx LIKE '%${keyword}%')
					</when>
					<when test="searchType.equals('member_name')">
						AND m.member_name LIKE '%${keyword}%' 
					</when>
					<when test="searchType.equals('account_owner_name')">
						AND a.account_owner_name LIKE '%${keyword}%' 
					</when>
					<when test="searchType.equals('product_name')">
						AND p.product_name LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('order_sell_idx')">
						AND os.order_sell_idx LIKE '%${keyword}%'
					</when>
				</choose>
			</if>
	</select>

	<!-- Order- SellList(판매 목록) 조회 -->
	<select id="selectSellList_0" resultType="com.teamone.ownit.vo.AdminOrderVO">
		SELECT
			os.order_sell_idx, os.order_sell_date, os.order_sell_gb,
			a.account_bank, a.account_num, a.account_owner_name,
        	m.member_name, 
        	p.product_name, p.product_sell_price, p.product_idx
		FROM order_sell os
			LEFT JOIN account a
				ON os.account_idx = a.account_idx
			LEFT JOIN member m
				ON os.member_idx = m.member_idx
			LEFT JOIN product p
				ON os.product_idx = p.product_idx
		WHERE os.order_sell_gb = '0'
			<if test="!keyword.equals('')">
				<!-- 2. 검색타입(search)에 따른 WHERE 변경 -->
				<choose>
					<when test="searchType.equals('all')">
							AND(m.member_name LIKE '%${keyword}%'
							OR a.account_owner_name LIKE '%${keyword}%'
							OR p.product_name LIKE '%${keyword}%' 
							OR os.order_sell_idx LIKE '%${keyword}%')
					</when>
					<when test="searchType.equals('member_name')">
						AND m.member_name LIKE '%${keyword}%' 
					</when>
					<when test="searchType.equals('account_owner_name')">
						AND a.account_owner_name LIKE '%${keyword}%' 
					</when>
					<when test="searchType.equals('product_name')">
						AND p.product_name LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('order_sell_idx')">
						AND os.order_sell_idx LIKE '%${keyword}%'
					</when>
				</choose>
			</if>
			ORDER BY 
				order_sell_idx DESC
			LIMIT #{startRow}, #{listLimit}
	</select>
	
	<select id="selectSellListCount_1" resultType="integer">
		SELECT COUNT(*)
		FROM order_sell os
			LEFT JOIN account a
				ON os.account_idx = a.account_idx
			LEFT JOIN member m
				ON os.member_idx = m.member_idx
			LEFT JOIN product p
				ON os.product_idx = p.product_idx
		WHERE os.order_sell_gb = '1'
			<if test="!keyword.equals('')">
				<!-- 2. 검색타입(search)에 따른 WHERE 변경 -->
				<choose>
					<when test="searchType.equals('all')">
						AND (m.member_name LIKE '%${keyword}%'
						OR a.account_owner_name LIKE '%${keyword}%'
						OR p.product_name LIKE '%${keyword}%' 
						OR os.order_sell_idx LIKE '%${keyword}%')
					</when>
					<when test="searchType.equals('member_name')">
						AND m.member_name LIKE '%${keyword}%' 
					</when>
					<when test="searchType.equals('account_owner_name')">
						AND a.account_owner_name LIKE '%${keyword}%' 
					</when>
					<when test="searchType.equals('product_name')">
						AND p.product_name LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('order_sell_idx')">
						AND os.order_sell_idx LIKE '%${keyword}%'
					</when>
				</choose>
			</if>
	</select>

	<!-- Order- SellList(판매 목록) 조회 -->
	<select id="selectSellList_1" resultType="com.teamone.ownit.vo.AdminOrderVO">
		SELECT
			os.order_sell_idx, os.order_sell_date, os.order_sell_gb,
			a.account_bank, a.account_num, a.account_owner_name,
        	m.member_name, 
        	p.product_name, p.product_sell_price, p.product_idx
		FROM order_sell os
			LEFT JOIN account a
				ON os.account_idx = a.account_idx
			LEFT JOIN member m
				ON os.member_idx = m.member_idx
			LEFT JOIN product p
				ON os.product_idx = p.product_idx
		WHERE os.order_sell_gb = '1'
			<if test="!keyword.equals('')">
				<!-- 2. 검색타입(search)에 따른 WHERE 변경 -->
				<choose>
					<when test="searchType.equals('all')">
							AND(m.member_name LIKE '%${keyword}%'
							OR a.account_owner_name LIKE '%${keyword}%'
							OR p.product_name LIKE '%${keyword}%' 
							OR os.order_sell_idx LIKE '%${keyword}%')
					</when>
					<when test="searchType.equals('member_name')">
						AND m.member_name LIKE '%${keyword}%' 
					</when>
					<when test="searchType.equals('account_owner_name')">
						AND a.account_owner_name LIKE '%${keyword}%' 
					</when>
					<when test="searchType.equals('product_name')">
						AND p.product_name LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('order_sell_idx')">
						AND os.order_sell_idx LIKE '%${keyword}%'
					</when>
				</choose>
			</if>
			ORDER BY 
				order_sell_idx DESC
			LIMIT #{startRow}, #{listLimit}
	</select>
	
	
	<select id="selectSellListCount_2" resultType="integer">
		SELECT COUNT(*)
		FROM order_sell os
			LEFT JOIN account a
				ON os.account_idx = a.account_idx
			LEFT JOIN member m
				ON os.member_idx = m.member_idx
			LEFT JOIN product p
				ON os.product_idx = p.product_idx
		WHERE os.order_sell_gb = '2'
			<if test="!keyword.equals('')">
				<!-- 2. 검색타입(search)에 따른 WHERE 변경 -->
				<choose>
					<when test="searchType.equals('all')">
						AND (m.member_name LIKE '%${keyword}%'
						OR a.account_owner_name LIKE '%${keyword}%'
						OR p.product_name LIKE '%${keyword}%' 
						OR os.order_sell_idx LIKE '%${keyword}%')
					</when>
					<when test="searchType.equals('member_name')">
						AND m.member_name LIKE '%${keyword}%' 
					</when>
					<when test="searchType.equals('account_owner_name')">
						AND a.account_owner_name LIKE '%${keyword}%' 
					</when>
					<when test="searchType.equals('product_name')">
						AND p.product_name LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('order_sell_idx')">
						AND os.order_sell_idx LIKE '%${keyword}%'
					</when>
				</choose>
			</if>
	</select>

	<!-- Order- SellList(판매 목록) 조회 -->
	<select id="selectSellList_2" resultType="com.teamone.ownit.vo.AdminOrderVO">
		SELECT
			os.order_sell_idx, os.order_sell_date, os.order_sell_gb,
			a.account_bank, a.account_num, a.account_owner_name,
        	m.member_name, 
        	p.product_name, p.product_sell_price, p.product_idx
		FROM order_sell os
			LEFT JOIN account a
				ON os.account_idx = a.account_idx
			LEFT JOIN member m
				ON os.member_idx = m.member_idx
			LEFT JOIN product p
				ON os.product_idx = p.product_idx
		WHERE os.order_sell_gb = '2'
			<if test="!keyword.equals('')">
				<!-- 2. 검색타입(search)에 따른 WHERE 변경 -->
				<choose>
					<when test="searchType.equals('all')">
							AND(m.member_name LIKE '%${keyword}%'
							OR a.account_owner_name LIKE '%${keyword}%'
							OR p.product_name LIKE '%${keyword}%' 
							OR os.order_sell_idx LIKE '%${keyword}%')
					</when>
					<when test="searchType.equals('member_name')">
						AND m.member_name LIKE '%${keyword}%' 
					</when>
					<when test="searchType.equals('account_owner_name')">
						AND a.account_owner_name LIKE '%${keyword}%' 
					</when>
					<when test="searchType.equals('product_name')">
						AND p.product_name LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('order_sell_idx')">
						AND os.order_sell_idx LIKE '%${keyword}%'
					</when>
				</choose>
			</if>
			ORDER BY 
				order_sell_idx DESC
			LIMIT #{startRow}, #{listLimit}
	</select>
		
	<!-- Order_Buy 상태 변경 (order_buy_gb) -->
	<update id="modifyOrderBuy">
		UPDATE 
				order_buy ob LEFT OUTER JOIN product p
			ON 
				ob.product_idx = p.product_idx
			SET 
				ob.order_buy_gb = #{order_buy_gb} 
			WHERE
				ob.order_buy_idx = #{order_buy_idx}
	</update>


	<!-- Order_Sell 상태 변경 (order_sell_gb) + product_left_count -->
	<update id="modifyOrderSell">
		UPDATE 
				order_sell os LEFT OUTER JOIN product p
			ON 
				os.product_idx = p.product_idx
			SET 
				<if test='order_sell_gb.equals("2")'>
					p.product_left_count = p.product_left_count + 1,
				</if>
				os.order_sell_gb = #{order_sell_gb} 
			WHERE
				os.order_sell_idx = #{order_sell_idx}
	</update>
	
	<!-- ProductList 재고변경 -->
	<update id="modifyProductLeftCount">
		UPDATE product 
			SET 
				product_left_count = #{product_left_count} 
			WHERE
				product_idx = #{product_idx}
	</update>
	
	


































































































<!-- 정채연 500 -->

</mapper> 
